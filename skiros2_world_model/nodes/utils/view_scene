#!/usr/bin/env python

#################################################################################
# Software License Agreement (BSD License)
#
# Copyright (c) 2016, Francesco Rovida
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in the
#   documentation and/or other materials provided with the distribution.
# * Neither the name of the copyright holder nor the
#   names of its contributors may be used to endorse or promote products
#   derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#################################################################################

import skiros2_world_model.core.local_world_model as wm
import skiros2_world_model.ros.world_model_interface as wmi
import sys

def _print_recursive(wmi, name, d, indentation=""):
    e = d[name]
    print "{}->{}".format(indentation, e.printState())
    for r in e.getRelations(subj="-1", pred=wmi.get_sub_properties("skiros:spatiallyRelated")):
        _print_recursive(wmi, r['dst'], d, indentation+"--")

def print_scene(wmi):
    (scene, scene_id) = wmi.get_scene()
    utility_dict = dict()
    for e in scene:
        utility_dict[e.id] = e
    _print_recursive(wmi, "skiros:Scene-0", utility_dict)

if __name__ == '__main__':
    print "usage: view_scene [<predicate>]. Default: skiros:spatiallyRelated. Other common predicates: skiros:sceneProperty, skiros:skillProperty."
    predicate = "skiros:spatiallyRelated"
    if len(sys.argv)>1:
      predicate = sys.argv[1]
    wmi = wmi.WorldModelInterface()
    print_scene(wmi)