#!/usr/bin/env python

#################################################################################
# Software License Agreement (BSD License)
#
# Copyright (c) 2016, Francesco Rovida
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in the
#   documentation and/or other materials provided with the distribution.
# * Neither the name of the copyright holder nor the
#   names of its contributors may be used to endorse or promote products
#   derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#################################################################################

import sys
import skiros2_world_model.ros.world_model_interface as wmi
import skiros2_common.tools.logger as log

def printUsage():
    print """usage: scene [<command>] [<arg1>]. 
Possible commands: load, save, add. 
Examples: 
edit_scene load file.owl
edit_scene add large_box_test_starter"""

if __name__ == '__main__':
    print sys.argv
    if len(sys.argv)==1:
        printUsage()
    else:
      wmi = wmi.WorldModelInterface()
      if sys.argv[1]=="save":
        wmi.save(sys.argv[2])
      elif sys.argv[1]=="load":
        wmi.load(sys.argv[2])
      elif sys.argv[1]=="add":
        print "ID: {}".format(wmi.instanciate(sys.argv[2])._id)
      else:
          log.error("InputError", "Command {} not recognized".format(sys.argv[1]))
          printUsage()
